{
  "openapi": "3.0.0",
  "info": {
    "title": "User Management and Paraphrasing API Service",
    "version": "1.0.0",
    "description": "This service provides endpoints for user management, including signup, login, and role management, as well as a paraphrasing feature."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/signup": {
      "post": {
        "summary": "User Signup",
        "description": "Registers a new user with the provided username, email, and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": ["username", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Redirects to signup success page."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User Login",
        "description": "Authenticates a user with the provided email and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Redirects to the members or admin page based on user role."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/admin": {
      "get": {
        "summary": "Admin Dashboard",
        "description": "Displays the admin dashboard, accessible only by users with admin privileges.",
        "responses": {
          "200": {
            "description": "Admin dashboard page."
          },
          "302": {
            "description": "Redirects to home page if not authenticated or not admin."
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    },
    "/updateUserRole": {
      "put": {
        "summary": "Update User Roles",
        "description": "Updates the roles of selected users to admin. Requires admin privileges.",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "selectedUsers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["selectedUsers"]
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Redirects back to admin page after updating roles."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "jwtAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "jwtAuth": []
    }
  ]
}
